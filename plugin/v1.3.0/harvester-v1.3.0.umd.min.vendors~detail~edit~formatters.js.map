{"version":3,"sources":["webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/Node.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/log.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/toJS.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyString.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/visit.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/doc/directives.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/doc/anchors.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/Alias.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/doc/createNode.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/Collection.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyComment.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringify.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyPair.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/Pair.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/YAMLMap.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/common/map.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/common/seq.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/common/string.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/common/null.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/core/bool.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/core/float.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/core/int.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/core/schema.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/json/schema.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/tags.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/schema/Schema.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/doc/applyReviver.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/doc/Document.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/errors.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-props.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/util-contains-newline.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/util-map-includes.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-block-map.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-end.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/compose-collection.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/compose-scalar.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/compose-node.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/compose-doc.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/compose/composer.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/cst-scalar.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/cst-stringify.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/cst-visit.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/cst.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/lexer.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/line-counter.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/parse/parser.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/public-api.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/index.js","webpack://harvester-v1.3.0//home/runner/work/harvester-dashboard/harvester-dashboard/node_modules/yaml/browser/dist/nodes/Scalar.js"],"names":["ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","NodeBase","type","Object","defineProperty","this","value","copy","create","getPrototypeOf","getOwnPropertyDescriptors","range","slice","binary","identify","Uint8Array","default","tag","src","onError","Buffer","from","atob","str","replace","buffer","length","i","charCodeAt","comment","ctx","onComment","onChompKeep","buf","toString","btoa","Error","s","String","fromCharCode","BLOCK_LITERAL","QUOTE_DOUBLE","lineWidth","Math","max","options","indent","minContentWidth","n","ceil","lines","Array","o","substr","join","warn","logLevel","warning","process","emitWarning","console","toJS","arg","isArray","map","v","toJSON","data","aliasCount","count","res","undefined","anchors","set","onCreate","keep","Number","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","onFold","onOverflow","endStep","folds","escapedFolds","end","push","ch","split","prev","overflow","escStart","escEnd","consumeMoreIndentedLines","next","j","fold","getFoldOptions","containsDocumentMarker","test","lineLengthOverLimit","indentLength","limit","strLen","start","doubleQuotedString","json","JSON","stringify","doubleQuotedAsJSON","implicitKey","minMultiLineLength","doubleQuotedMinMultiLineLength","code","singleQuotedString","singleQuote","includes","quotedString","qs","hasDouble","hasSingle","blockString","blockQuote","commentString","forceBlockIndent","literal","Scalar","BLOCK_FOLDED","chomp","endStart","substring","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","indentSize","header","body","plainString","item","actualString","inFlow","PLAIN","_a","compat","tags","doc","schema","some","stringifyString","ss","assign","_stringify","_type","QUOTE_SINGLE","defaultKeyType","defaultStringType","t","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","cd","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","concat","items","ci","splice","ck","cv","async","visitAsync","visitAsync_","Collection","Node","Value","Alias","Map","Seq","_b","_c","_d","_e","call","Pair","parent","pt","escapeChars","escapeTagName","tn","yaml","docStart","docEnd","defaultYaml","defaultTags","version","atNextDocument","explicit","line","parts","trim","name","shift","handle","prefix","isValid","source","verbatim","suffix","match","decodeURIComponent","entries","startsWith","tagEntries","tagNames","_key","keys","anchorIsValid","sa","msg","anchorNames","root","Set","add","findNewAnchor","exclude","has","createNodeAnchors","aliasObjects","sourceObjects","prevAnchors","onAnchor","setAnchors","ref","get","error","super","found","_arg","maxAliasCount","resolve","ReferenceError","getAliasCount","_onComment","_onChompKeep","verifyAliasOrder","c","kc","vc","defaultTagPrefix","findTagObject","tagName","filter","tagObj","find","format","createNode","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","iterator","collectionFromPath","k","isInteger","a","keepUndefined","isEmptyPath","done","configurable","enumerable","writable","it","clone","rest","addIn","delete","deleteIn","keepScalar","getIn","allowScalar","every","commentBefore","hasIn","setIn","maxFlowStringSingleLineLength","stringifyComment","indentComment","lineComment","endsWith","createStringifyContext","opt","directives","falseStr","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","indentStep","repeat","getTagObject","obj","nodeClass","constructor","stringifyProps","props","tagString","resolvedAliases","TypeError","stringifyPair","allNullValues","keyComment","explicitKey","keyCommentDone","chompKeep","vcb","valueComment","spaceBefore","cs","flow","valueCommentDone","valueStr","ws","MERGE_KEY","addPairToJSMap","merge","isMergeKey","mergeToJSMap","jsKey","stringKey","stringifyKey","jsValue","srcMap","prototype","hasOwnProperty","strCtx","inStringifyKey","strKey","mapKeyWarned","jsonStr","createPair","_","pair","mapAsMap","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","reqNewline","linesAtValue","iv","len","reduce","sum","ic","trimStart","findPair","overwrite","_pair","sortEntries","sortMapEntries","findIndex","del","Type","hasAllNullValues","createMap","replacer","sort","idx","asItemIndex","seq","createSeq","string","nullTag","boolTag","sv","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","intHex","stringifyJSON","jsonScalars","jsonError","resolvePairs","cn","createPairs","iterable","pairs","bind","seenKeys","omap","boolStringify","boolObj","trueTag","falseTag","f","sign","intBin","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","intTime","floatTime","timestamp","Date","RegExp","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","tagsByName","bool","float","int","null","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","resolveKnownTags","toStringDefaults","knownTags","stringifyDocument","hasDirectives","dir","contentComment","dc","applyReviver","reviver","val","v0","v1","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","uniqueKeys","atDocument","setSchema","assertCollection","keyToStr","asStr","anchorPrefix","jsonArg","values","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","startOnNewline","atNewline","hasSpace","commentSep","hasNewline","reqSpace","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","bm","atRoot","collItem","keyProps","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockSeq","bs","resolveEnd","blockMsg","isBlock","resolveFlowCollection","fcName","coll","prevItemComment","loop","expectedEnd","ce","ee","cePos","toUpperCase","composeCollection","CN","tagToken","Coll","expType","kt","resolveBlockScalar","scalar","parseBlockScalarHeader","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","ts","first","m","line0","resolveFlowScalar","rel","plainValue","singleQuotedValue","doubleQuotedValue","valueEnd","re","badChar","foldLines","exec","lastIndex","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","e","r","N","L","P","ok","fromCodePoint","composeScalar","findScalarTagByName","findScalarTagByTest","matchWithTest","emptyScalarPosition","before","isSrcToken","composeAlias","alias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","atDirectives","afterDoc","apply","forceDoc","endOffset","decorate","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","nl","cst","stringifyToken","stringifyItem","_visit","field","itemAtPath","index","parentCollection","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","incomplete","hasChars","parseNext","dt","state","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","getLine","setNext","pushCount","dirEnd","pushSpaces","pushNewline","atLineEnd","sp","charAt","peek","ch0","ch1","pushIndicators","pushUntil","atFlowEndMarker","quote","qb","continueScalar","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","includesNonEmpty","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","lexeme","lex","step","pop","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","sourceToken","lineEnd","bv","startBlockValue","atIndentedComment","atNextItem","fs","flowScalar","parseOptions","lineCounter","parseAllDocuments","parser","composer","docs","compose","parse","forEach","empty","streamInfo","_doc","_reviver","round","isScalarValue"],"mappings":"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","file":"harvester-v1.3.0.umd.min.vendors~detail~edit~formatters.js","sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !(ctx === null || ctx === void 0 ? void 0 : ctx.keep))\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => { var _a; return tag.default && tag.tag !== 'tag:yaml.org,2002:str' && ((_a = tag.test) === null || _a === void 0 ? void 0 : _a.test(str)); };\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || (compat === null || compat === void 0 ? void 0 : compat.some(test)))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    var _a, _b, _c, _d, _e;\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return (_a = visitor.Map) === null || _a === void 0 ? void 0 : _a.call(visitor, key, node, path);\n    if (isSeq(node))\n        return (_b = visitor.Seq) === null || _b === void 0 ? void 0 : _b.call(visitor, key, node, path);\n    if (isPair(node))\n        return (_c = visitor.Pair) === null || _c === void 0 ? void 0 : _c.call(visitor, key, node, path);\n    if (isScalar(node))\n        return (_d = visitor.Scalar) === null || _d === void 0 ? void 0 : _d.call(visitor, key, node, path);\n    if (isAlias(node))\n        return (_e = visitor.Alias) === null || _e === void 0 ? void 0 : _e.call(visitor, key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    var _a;\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = (_a = match.find(t => !t.format)) !== null && _a !== void 0 ? _a : match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => { var _a; return ((_a = t.identify) === null || _a === void 0 ? void 0 : _a.call(t, value)) && !t.format; });\n}\nfunction createNode(value, tagName, ctx) {\n    var _a, _b;\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = (_b = (_a = ctx.schema[MAP]).createNode) === null || _b === void 0 ? void 0 : _b.call(_a, ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt === 'function' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName === null || tagName === void 0 ? void 0 : tagName.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = (tagObj === null || tagObj === void 0 ? void 0 : tagObj.createNode)\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// null, undefined, or an empty non-string iterable (e.g. [])\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    var _a, _b, _c, _d;\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return (_a = match.find(t => t.format === item.format)) !== null && _a !== void 0 ? _a : match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => { var _a; return (_a = t.identify) === null || _a === void 0 ? void 0 : _a.call(t, obj); });\n        tagObj =\n            (_b = match.find(t => t.format === item.format)) !== null && _b !== void 0 ? _b : match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = (_d = (_c = obj === null || obj === void 0 ? void 0 : obj.constructor) === null || _c === void 0 ? void 0 : _c.name) !== null && _d !== void 0 ? _d : typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    var _a, _b;\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if ((_a = ctx.resolvedAliases) === null || _a === void 0 ? void 0 : _a.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = ((_b = ctx.indentAtStart) !== null && _b !== void 0 ? _b : 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if ((ctx === null || ctx === void 0 ? void 0 : ctx.doc.schema.merge) && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = (ctx === null || ctx === void 0 ? void 0 : ctx.mapAsMap) ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return (ctx === null || ctx === void 0 ? void 0 : ctx.doc)\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    var _a;\n    const flow = (_a = ctx.inFlow) !== null && _a !== void 0 ? _a : collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        var _a;\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = (_a = this.schema) === null || _a === void 0 ? void 0 : _a.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it === null || it === void 0 ? void 0 : it.value;\n        return !keepScalar && isScalar(node) ? node.value : node;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : (ctx === null || ctx === void 0 ? void 0 : ctx.mapAsMap) ? new Map() : {};\n        if (ctx === null || ctx === void 0 ? void 0 : ctx.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx === null || ctx === void 0 ? void 0 : ctx.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    var _a;\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = (_a = pair.value) !== null && _a !== void 0 ? _a : pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx === null || ctx === void 0 ? void 0 : ctx.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults !== null && toStringDefaults !== void 0 ? toStringDefaults : null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    var _a;\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if ((_a = doc.directives) === null || _a === void 0 ? void 0 : _a.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options === null || options === void 0 ? void 0 : options.directives) {\n            this.directives = options.directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options !== null && options !== void 0 ? options : {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects !== null && aliasDuplicateObjects !== void 0 ? aliasDuplicateObjects : true,\n            keepUndefined: keepUndefined !== null && keepUndefined !== void 0 ? keepUndefined : false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg !== null && jsonArg !== void 0 ? jsonArg : '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow !== null && flow !== void 0 ? flow : 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        end,\n        start: start !== null && start !== void 0 ? start : end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if ((fc === null || fc === void 0 ? void 0 : fc.type) === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    var _a;\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key !== null && key !== void 0 ? key : sep === null || sep === void 0 ? void 0 : sep[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                // TODO: assert being at last item?\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n        }\n        else if (((_a = keyProps.found) === null || _a === void 0 ? void 0 : _a.indent) !== bm.indent)\n            onError(offset, 'BAD_INDENT', startColMsg);\n        if (implicitKey && containsNewline(key))\n            onError(key, // checked by containsNewline()\n            'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep !== null && sep !== void 0 ? sep : [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if ((value === null || value === void 0 ? void 0 : value.type) === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    map.range = [bm.offset, offset, offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        offset = props.end;\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(offset, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                // TODO: assert being at last item?\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, offset, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    var _a;\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key !== null && key !== void 0 ? key : sep === null || sep === void 0 ? void 0 : sep[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = (_a = prev.value) !== null && _a !== void 0 ? _a : prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep !== null && sep !== void 0 ? sep : [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag === null || tag === void 0 ? void 0 : tag.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = (m === null || m === void 0 ? void 0 : m[1])\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    var _a;\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + ((_a = match === null || match === void 0 ? void 0 : match[1]) !== null && _a !== void 0 ? _a : '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken !== null && tagToken !== void 0 ? tagToken : token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken !== null && tagToken !== void 0 ? tagToken : token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    var _a;\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if ((_a = tag.test) === null || _a === void 0 ? void 0 : _a.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    var _a;\n    const tag = schema.tags.find(tag => { var _a; return tag.default && ((_a = tag.test) === null || _a === void 0 ? void 0 : _a.test(value)); }) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = (_a = schema.compat.find(tag => { var _a; return tag.default && ((_a = tag.test) === null || _a === void 0 ? void 0 : _a.test(value)); })) !== null && _a !== void 0 ? _a : schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while ((st === null || st === void 0 ? void 0 : st.type) === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment)\n        node.comment = comment;\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value !== null && value !== void 0 ? value : end === null || end === void 0 ? void 0 : end[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    var _a;\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (((_a = prelude[i + 1]) === null || _a === void 0 ? void 0 : _a[0]) !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    var _a;\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = (_a = context.end) !== null && _a !== void 0 ? _a : [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item === null || item === void 0 ? void 0 : item[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent === null || parent === void 0 ? void 0 : parent[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        var _a;\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = (_a = this.next) !== null && _a !== void 0 ? _a : 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction includesNonEmpty(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return true;\n        }\n    }\n    return false;\n}\nfunction isFlowToken(token) {\n    switch (token === null || token === void 0 ? void 0 : token.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    var _a;\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return (_a = it.sep) !== null && _a !== void 0 ? _a : it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    var _a;\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (((_a = prev[++i]) === null || _a === void 0 ? void 0 : _a.type) === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error !== null && error !== void 0 ? error : this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    !includesNonEmpty(last.start) &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (includesNonEmpty(doc.start)) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        var _a;\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if ((last === null || last === void 0 ? void 0 : last.type) === 'comment')\n                        end === null || end === void 0 ? void 0 : end.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep)\n                    it.sep.push(this.sourceToken);\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    map.items.push({ start: [this.sourceToken] });\n                else if (it.sep)\n                    it.sep.push(this.sourceToken);\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = (_a = prev === null || prev === void 0 ? void 0 : prev.value) === null || _a === void 0 ? void 0 : _a.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine &&\n                this.indent === map.indent &&\n                (it.sep || includesNonEmpty(it.start));\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        var _a;\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if ((last === null || last === void 0 ? void 0 : last.type) === 'comment')\n                        end === null || end === void 0 ? void 0 : end.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = (_a = prev === null || prev === void 0 ? void 0 : prev.value) === null || _a === void 0 ? void 0 : _a.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter === null || lineCounter === void 0 ? void 0 : lineCounter.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter === null || lineCounter === void 0 ? void 0 : lineCounter.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    var _a;\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = (_a = options !== null && options !== void 0 ? options : replacer) !== null && _a !== void 0 ? _a : {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n","import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return (ctx === null || ctx === void 0 ? void 0 : ctx.keep) ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n"],"sourceRoot":""}